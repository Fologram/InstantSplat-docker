[project]
dependencies = ["build>=1.2.2.post1,<2", "mini-dust3r>=0.1.1,<0.2"]
description = "Add a short description here"
name = "instant_splat"
requires-python = ">= 3.11"
version = "0.1.0"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["instant_splat*"]

[tool.pixi.project]
channels = ["nvidia", "nvidia/label/cuda-11.8.0", "conda-forge", "pytorch"]
platforms = ["linux-64"]

[tool.pixi.system-requirements]
libc = { family = "glibc", version = "2.31" }
cuda = "11.8.0"

[tool.pixi.pypi-dependencies]
roma = ">=1.5.0, <2"
evo = ">=1.30.0, <2"
pyglet = "<2"
huggingface-hub = "*"
simple_knn = { url = "https://huggingface.co/datasets/pablovela5620/instantsplat/resolve/main/simple_knn-0.1.0%2Bpt231cu118-cp311-cp311-linux_x86_64.whl" }
diff_gaussian_rasterization = { url = "https://huggingface.co/datasets/pablovela5620/instantsplat/resolve/main/diff_gaussian_rasterization-0.1.0%2Bpt231cu118-cp311-cp311-linux_x86_64.whl" }
imageio = { version = "*", extras = ["ffmpeg"] }
instant_splat = { path = ".", editable = true }

[tool.pixi.dependencies]
python = "3.11.*"
pytorch = { version = "2.3.1", channel = "pytorch" }
torchvision = { version = "0.18.1", channel = "pytorch" }
cuda = { version = "*", channel = "nvidia/label/cuda-11.8.0" }
pytorch-cuda = { version = "11.8.*", channel = "pytorch" }
cuda-nvcc = "11.8.*"
beartype = ">=0.18.5,<0.19"
rerun-sdk = ">=0.18.2,<0.19"
jaxtyping = ">=0.2.34,<0.3"
einops = ">=0.8.0,<0.9"
cmake = "==3.14.0"
pip = ">=24.2,<25"
gradio = ">=4.42.0,<5"
matplotlib = ">=3.9.1,<4"
tqdm = ">=4.66.5,<5"
py-opencv = ">=4.10.0,<5"
scipy = ">=1.14.1,<2"
trimesh = ">=4.4.9,<5"
tensorboard = ">=2.17.1,<3"
gdown = ">=5.2.0,<6"
plyfile = ">=1.1,<2"
tyro = ">=0.8.11,<0.9"
icecream = ">=2.1.3,<3"

[tool.pixi.tasks]
post-install = '''sed -i 's/p_view\.z <= 0\.2f/p_view\.z <= 0.001f/' submodules/diff-gaussian-rasterization/cuda_rasterizer/auxiliary.h'''
_get-poses-example = { cmd = """python coarse_init_infer.py --img_base_path data/custom/food --n_views 3 --focal_avg""" }
_train-example = { cmd = """python train_joint.py -s data/custom/food -m output/food300/ --n_views 3 --scene food --iter 300 --optim_pose""" }

[tool.pixi.tasks._download_replica_big]
cmd = """
test -e "checkpoints/DUSt3R_ViTLarge_BaseDecoder_512_dpt.pth"
|| (
    mkdir -p checkpoints/
    && wget https://download.europe.naverlabs.com/ComputerVision/DUSt3R/DUSt3R_ViTLarge_BaseDecoder_512_dpt.pth -P checkpoints/
   )
"""
